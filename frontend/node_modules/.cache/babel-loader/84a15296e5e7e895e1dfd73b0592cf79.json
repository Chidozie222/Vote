{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\Vote\\\\frontend\\\\src\\\\component\\\\Results\\\\results.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from 'react-router-dom';\nimport Side from \"../side/side\";\nimport '../styles/home.css';\nrequire('dotenv').config();\nconst Results = () => {\n  const params = useParams();\n  const Useremail = params.Useremail;\n  const Title = params.Title;\n  const [positions, setPositions] = useState([]);\n  const [results, setResults] = useState({});\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_URL}/position_title/${Useremail}/${Title}`).then(res => {\n      setPositions(res.data.data || []);\n    }).catch(error => {\n      console.error('Error fetching positions:', error);\n    });\n  }, [Useremail, Title]);\n  const getCandidateInfo = async position => {\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_URL}/getcandidateinfo/${Useremail}/${Title}/${position}`);\n      return response.data.data || [];\n    } catch (error) {\n      console.error(`Error fetching candidate info for ${position}:`, error);\n      return [];\n    }\n  };\n  const getVotingResults = async (position, candidateName) => {\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_URL}/results/${Useremail}/${Title}/${position}/${candidateName}`);\n      const votingResults = response.data.data || [];\n\n      // Group the data based on candidateName\n      const groupedResults = votingResults.reduce((grouped, result) => {\n        const candidateName = result.candidateName;\n        if (!grouped[candidateName]) {\n          grouped[candidateName] = [];\n        }\n        grouped[candidateName].push(result);\n        return grouped;\n      }, {});\n\n      // Count occurrences of each candidate group\n      const groupCounts = Object.keys(groupedResults).map(candidateName => {\n        const groupData = groupedResults[candidateName];\n        const totalCount = groupData.length;\n        return {\n          candidateName: candidateName,\n          totalCount\n        };\n      });\n      return {\n        groupedResults,\n        groupCounts\n      };\n    } catch (error) {\n      console.error(`Error fetching voting results for ${candidateName}:`, error);\n      return {};\n    }\n  };\n  const handleButtonClick = async position => {\n    const candidateInfo = await getCandidateInfo(position);\n\n    // Call the getVotingResults function and log the results\n    const resultsData = {};\n    for (let index = 0; index < candidateInfo.length; index++) {\n      const resultData = await getVotingResults(position, candidateInfo[index].candidateName);\n      resultsData[candidateInfo[index].candidateName] = resultData;\n    }\n    setResults({\n      [position]: candidateInfo,\n      resultsData\n    });\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Side, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"Position_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, Title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home_body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, positions.length > 0 ? positions.map(title => {\n    var _results$resultsData$;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Add_new\",\n      key: title.position,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      id: \"poll\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, title.position), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => handleButtonClick(title.position),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, \"View the number of votes\"), results[title.position] && results[title.position].length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, \"Candidates for \", title.position), results[title.position].map(candidate => /*#__PURE__*/React.createElement(\"div\", {\n      key: candidate._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, \"Candidate: \", candidate.candidateName), /*#__PURE__*/React.createElement(\"img\", {\n      src: `${process.env.REACT_APP_URL}/uploads/${candidate.image}`,\n      alt: candidate.candidateName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }))), console.log(title.position), results.resultsData && results.resultsData[title.position] ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 23\n      }\n    }, (_results$resultsData$ = results.resultsData[title.position.candidateName].groupCounts) === null || _results$resultsData$ === void 0 ? void 0 : _results$resultsData$.map(item => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"class\",\n      key: item.candidateName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }, item.candidateName, \": \", item.totalCount)))) : /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 23\n      }\n    }, \"No additional voting results found for \", title.position.candidateName)) : /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 19\n      }\n    }, \"No candidates found for \", title.position));\n  }) : /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"world\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, \"Wait for the result data\"))));\n};\nexport default Results;","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","Side","require","config","Results","params","Useremail","Title","positions","setPositions","results","setResults","get","process","env","REACT_APP_URL","then","res","data","catch","error","console","getCandidateInfo","position","response","getVotingResults","candidateName","votingResults","groupedResults","reduce","grouped","result","push","groupCounts","Object","keys","map","groupData","totalCount","length","handleButtonClick","candidateInfo","resultsData","index","resultData","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","id","title","_results$resultsData$","key","type","onClick","candidate","_id","src","image","alt","log","item"],"sources":["C:/Users/user/Documents/Vote/frontend/src/component/Results/results.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from 'react-router-dom';\r\nimport Side from \"../side/side\";\r\nimport '../styles/home.css';\r\nrequire('dotenv').config();\r\n\r\nconst Results = () => {\r\n  const params = useParams();\r\n  const Useremail = params.Useremail;\r\n  const Title = params.Title;\r\n\r\n  const [positions, setPositions] = useState([]);\r\n  const [results, setResults] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios.get(`${process.env.REACT_APP_URL}/position_title/${Useremail}/${Title}`)\r\n      .then((res) => {\r\n        setPositions(res.data.data || []);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching positions:', error);\r\n      });\r\n  }, [Useremail, Title]);\r\n\r\n  const getCandidateInfo = async (position) => {\r\n    try {\r\n      const response = await axios.get(`${process.env.REACT_APP_URL}/getcandidateinfo/${Useremail}/${Title}/${position}`);\r\n      return response.data.data || [];\r\n    } catch (error) {\r\n      console.error(`Error fetching candidate info for ${position}:`, error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const getVotingResults = async (position, candidateName) => {\r\n    try {\r\n      const response = await axios.get(`${process.env.REACT_APP_URL}/results/${Useremail}/${Title}/${position}/${candidateName}`);\r\n      const votingResults = response.data.data || [];\r\n\r\n      // Group the data based on candidateName\r\n      const groupedResults = votingResults.reduce((grouped, result) => {\r\n        const candidateName = result.candidateName;\r\n\r\n        if (!grouped[candidateName]) {\r\n          grouped[candidateName] = [];\r\n        }\r\n\r\n        grouped[candidateName].push(result);\r\n\r\n        return grouped;\r\n      }, {});\r\n\r\n      // Count occurrences of each candidate group\r\n      const groupCounts = Object.keys(groupedResults).map(candidateName => {\r\n        const groupData = groupedResults[candidateName];\r\n        const totalCount = groupData.length;\r\n\r\n        return { candidateName: candidateName, totalCount };\r\n      });\r\n\r\n      return { groupedResults, groupCounts };\r\n    } catch (error) {\r\n      console.error(`Error fetching voting results for ${candidateName}:`, error);\r\n      return {};\r\n    }\r\n  };\r\n\r\n  const handleButtonClick = async (position) => {\r\n    const candidateInfo = await getCandidateInfo(position);\r\n\r\n    // Call the getVotingResults function and log the results\r\n    const resultsData = {};\r\n    for (let index = 0; index < candidateInfo.length; index++) {\r\n      const resultData = await getVotingResults(position, candidateInfo[index].candidateName);\r\n      resultsData[candidateInfo[index].candidateName] = resultData;\r\n    }\r\n\r\n    setResults({ [position]: candidateInfo, resultsData });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Side />\r\n      <div className=\"home\">\r\n        <h1 id=\"Position_title\">{Title}</h1>\r\n        <div className=\"home_body\">\r\n          {positions.length > 0 ? (\r\n            positions.map((title) => (\r\n              <div className=\"Add_new\" key={title.position}>\r\n                <p id=\"poll\">{title.position}</p>\r\n                <button type=\"button\" onClick={() => handleButtonClick(title.position)}>\r\n                  View the number of votes\r\n                </button>\r\n\r\n                {/* Display candidate information */}\r\n                {results[title.position] && results[title.position].length > 0 ? (\r\n                  <div>\r\n                    <h3>Candidates for {title.position}</h3>\r\n                    {results[title.position].map((candidate) => (\r\n                      <div key={candidate._id}>\r\n                        <p>Candidate: {candidate.candidateName}</p>\r\n                        <img src={`${process.env.REACT_APP_URL}/uploads/${candidate.image}`} alt={candidate.candidateName} />\r\n                      </div>\r\n                    ))}\r\n                    {/* Display additional results based on voting data */}\r\n                    {console.log(title.position)}\r\n                    {results.resultsData && results.resultsData[title.position] ? (\r\n                      <div>\r\n                        {results.resultsData[title.position.candidateName].groupCounts?.map((item) => (\r\n                          <div className=\"class\" key={item.candidateName}>\r\n                            <p>{item.candidateName}: {item.totalCount}</p>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    ) : (\r\n                      <h4>No additional voting results found for {title.position.candidateName}</h4>\r\n                    )}\r\n                  </div>\r\n                ) : (\r\n                  <h4>No candidates found for {title.position}</h4>\r\n                )}\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <h1 id=\"world\">Wait for the result data</h1>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}