{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Vote\\\\frontend\\\\src\\\\component\\\\Results\\\\results.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from 'react-router-dom';\nimport Side from \"../side/side\";\nimport '../styles/home.css';\nrequire('dotenv').config();\nconst Results = () => {\n  const params = useParams();\n  const Useremail = params.Useremail;\n  const Title = params.Title;\n  const [positions, setPositions] = useState([]);\n  const [results, setResults] = useState({});\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_URL}/position_title/${Useremail}/${Title}`).then(res => {\n      setPositions(res.data.data || []);\n    }).catch(error => {\n      console.error('Error fetching positions:', error);\n    });\n  }, [Useremail, Title]);\n  const getCandidateInfo = async position => {\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_URL}/getcandidateinfo/${Useremail}/${Title}/${position}`);\n      return response.data.data || [];\n    } catch (error) {\n      console.error(`Error fetching candidate info for ${position}:`, error);\n      return [];\n    }\n  };\n  const getVotingResults = async (position, candidateName) => {\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_URL}/results/${Useremail}/${Title}/${position}/${candidateName}`);\n      const votingResults = response.data || [];\n\n      // Group the data based on candidateName\n      const groupedResults = votingResults.reduce((grouped, result) => {\n        const name = result.candidateName;\n        if (!grouped[name]) {\n          grouped[name] = [];\n        }\n        grouped[name].push(result);\n        return grouped;\n      }, {});\n\n      // Count occurrences of each candidate group\n      const groupCounts = Object.keys(groupedResults).map(name => {\n        const groupData = groupedResults[name];\n        const totalCount = groupData.length;\n        return {\n          candidateName: name,\n          totalCount\n        };\n      });\n      return {\n        groupedResults,\n        groupCounts\n      };\n    } catch (error) {\n      console.error(`Error fetching voting results for ${candidateName}:`, error);\n      return {};\n    }\n  };\n  const handleButtonClick = async position => {\n    const candidateInfo = await getCandidateInfo(position);\n\n    // Choose a candidateName for demonstration (you can replace it with actual data)\n    const candidateName = candidateInfo.length > 0 ? candidateInfo[0].candidateName : \"\";\n    const votingResults = await getVotingResults(position, candidateName);\n    setResults({\n      [position]: votingResults.groupedResults\n    });\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Side, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"Position_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, Title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home_body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, positions.length > 0 ? positions.map(title => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Add_new\",\n    key: title.position,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    id: \"poll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, title.position), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleButtonClick(title.position),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"View the number of votes\"), results[title.position] && Object.keys(results[title.position]).length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, \"Voting results for \", title.position), Object.keys(results[title.position]).map(candidateName => /*#__PURE__*/React.createElement(\"div\", {\n    key: candidateName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, \"Candidate: \", candidateName), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, \"Total Votes: \", results[title.position][candidateName].length)))) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }, \"No voting results found for \", title.position))) : /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"world\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Wait for the result data\"))));\n};\nexport default Results;","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","Side","require","config","Results","params","Useremail","Title","positions","setPositions","results","setResults","get","process","env","REACT_APP_URL","then","res","data","catch","error","console","getCandidateInfo","position","response","getVotingResults","candidateName","votingResults","groupedResults","reduce","grouped","result","name","push","groupCounts","Object","keys","map","groupData","totalCount","length","handleButtonClick","candidateInfo","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","id","title","key","type","onClick"],"sources":["C:/Users/HP/Desktop/Vote/frontend/src/component/Results/results.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from 'react-router-dom';\r\nimport Side from \"../side/side\";\r\nimport '../styles/home.css';\r\nrequire('dotenv').config();\r\n\r\nconst Results = () => {\r\n  const params = useParams();\r\n  const Useremail = params.Useremail;\r\n  const Title = params.Title;\r\n\r\n  const [positions, setPositions] = useState([]);\r\n  const [results, setResults] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios.get(`${process.env.REACT_APP_URL}/position_title/${Useremail}/${Title}`)\r\n      .then((res) => {\r\n        setPositions(res.data.data || []);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching positions:', error);\r\n      });\r\n  }, [Useremail, Title]);\r\n\r\n  const getCandidateInfo = async (position) => {\r\n    try {\r\n      const response = await axios.get(`${process.env.REACT_APP_URL}/getcandidateinfo/${Useremail}/${Title}/${position}`);\r\n      return response.data.data || [];\r\n    } catch (error) {\r\n      console.error(`Error fetching candidate info for ${position}:`, error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const getVotingResults = async (position, candidateName) => {\r\n    try {\r\n      const response = await axios.get(`${process.env.REACT_APP_URL}/results/${Useremail}/${Title}/${position}/${candidateName}`);\r\n      const votingResults = response.data || [];\r\n\r\n      // Group the data based on candidateName\r\n      const groupedResults = votingResults.reduce((grouped, result) => {\r\n        const name = result.candidateName;\r\n\r\n        if (!grouped[name]) {\r\n          grouped[name] = [];\r\n        }\r\n\r\n        grouped[name].push(result);\r\n\r\n        return grouped;\r\n      }, {});\r\n\r\n      // Count occurrences of each candidate group\r\n      const groupCounts = Object.keys(groupedResults).map(name => {\r\n        const groupData = groupedResults[name];\r\n        const totalCount = groupData.length;\r\n\r\n        return { candidateName: name, totalCount };\r\n      });\r\n\r\n      return { groupedResults, groupCounts };\r\n    } catch (error) {\r\n      console.error(`Error fetching voting results for ${candidateName}:`, error);\r\n      return {};\r\n    }\r\n  };\r\n\r\n  const handleButtonClick = async (position) => {\r\n    const candidateInfo = await getCandidateInfo(position);\r\n\r\n    // Choose a candidateName for demonstration (you can replace it with actual data)\r\n    const candidateName = candidateInfo.length > 0 ? candidateInfo[0].candidateName : \"\";\r\n\r\n    const votingResults = await getVotingResults(position, candidateName);\r\n    setResults({ [position]: votingResults.groupedResults });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Side />\r\n      <div className=\"home\">\r\n        <h1 id=\"Position_title\">{Title}</h1>\r\n        <div className=\"home_body\">\r\n          {positions.length > 0 ? (\r\n            positions.map((title) => (\r\n              <div className=\"Add_new\" key={title.position}>\r\n                <p id=\"poll\">{title.position}</p>\r\n                <button type=\"button\" onClick={() => handleButtonClick(title.position)}>\r\n                  View the number of votes\r\n                </button>\r\n\r\n                {/* Display voting results */}\r\n                {results[title.position] && Object.keys(results[title.position]).length > 0 ? (\r\n                  <div>\r\n                    <h3>Voting results for {title.position}</h3>\r\n                    {Object.keys(results[title.position]).map((candidateName) => (\r\n                      <div key={candidateName}>\r\n                        <p>Candidate: {candidateName}</p>\r\n                        <p>Total Votes: {results[title.position][candidateName].length}</p>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                ) : (\r\n                  <h4>No voting results found for {title.position}</h4>\r\n                )}\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <h1 id=\"world\">Wait for the result data</h1>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}