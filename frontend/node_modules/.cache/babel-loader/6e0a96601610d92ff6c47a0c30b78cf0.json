{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Vote\\\\frontend\\\\src\\\\component\\\\guest\\\\guest-verify.jsx\";\nimport React, { useState } from \"react\";\nimport '../styles/verify.css';\nimport { useNavigate, useParams } from \"react-router-dom\";\nconst Guest_verify = () => {\n  let params = useParams();\n  let Useremail = params.Useremail;\n  const [email, setemail] = useState(\"\");\n  const [otp, setotp] = useState(\"\");\n  const [PhoneNumber, setPhoneNumber] = useState(\"\");\n  const guest_verify = () => {\n    let useremail = document.getElementById('error');\n    let lotp = document.getElementById('error1');\n    let Password = document.getElementById('error2');\n    if (email.trim().length === 0) {\n      useremail.innerText = 'input a vaild email';\n    } else {\n      useremail.innerText = '';\n      if (email.match(\"^([a-zA-Z0-9]+)@gmail.com\") === null) {\n        useremail.innerText = 'This is how your email should be like example@gmail.com';\n      } else {\n        if (otp.trim().length === 0) {\n          lotp.innerText = \"Please input a vaild otp\";\n        } else {\n          if (PhoneNumber.trim().length === 0) {\n            Password.innerText = \"Please input your Phone Number\";\n          } else {\n            fetch(\"http://localhost:2000/verifypassword\", {\n              method: \"POST\",\n              crossDomain: true,\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n                \"Access-Control-Allow-Origin\": \"*\"\n              },\n              body: JSON.stringify({\n                email,\n                otp\n              })\n            }).then(res => res.json()).then(data => {\n              if (data.status === 'ok') {\n                alert(data.message);\n              } else {\n                alert(data.message);\n              }\n            });\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Hello world\"));\n};\nexport default Guest_verify;","map":{"version":3,"names":["React","useState","useNavigate","useParams","Guest_verify","params","Useremail","email","setemail","otp","setotp","PhoneNumber","setPhoneNumber","guest_verify","useremail","document","getElementById","lotp","Password","trim","length","innerText","match","fetch","method","crossDomain","headers","Accept","body","JSON","stringify","then","res","json","data","status","alert","message","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/HP/Desktop/Vote/frontend/src/component/guest/guest-verify.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport '../styles/verify.css'\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Guest_verify = () => {\r\n    let params = useParams()\r\n    let Useremail = params.Useremail\r\n    const [email, setemail] = useState(\"\")\r\n    const [otp, setotp] = useState(\"\")\r\n    const [PhoneNumber, setPhoneNumber] = useState(\"\")\r\n    const guest_verify = () => {\r\n        let  useremail= document.getElementById('error')\r\n        let lotp = document.getElementById('error1')\r\n        let Password = document.getElementById('error2')\r\n\r\n            if (email.trim().length === 0) {\r\n                useremail.innerText = 'input a vaild email'\r\n            } else {\r\n                useremail.innerText = ''\r\n                if (email.match(\"^([a-zA-Z0-9]+)@gmail.com\")===null) {\r\n                    useremail.innerText = 'This is how your email should be like example@gmail.com'\r\n                } else{\r\n                    if (otp.trim().length === 0) {\r\n                        lotp.innerText = \"Please input a vaild otp\"\r\n                    } else {\r\n                        if (PhoneNumber.trim().length === 0) {\r\n                            Password.innerText = \"Please input your Phone Number\"\r\n                        } else {\r\n                                fetch(\"http://localhost:2000/verifypassword\", {\r\n                            method: \"POST\",\r\n                            crossDomain: true,\r\n                            headers: {\r\n                                \"Content-Type\": \"application/json\",\r\n                                Accept: \"application/json\",\r\n                                \"Access-Control-Allow-Origin\": \"*\",\r\n                            },\r\n                            body: JSON.stringify({\r\n                                email,\r\n                                otp,\r\n                                \r\n                            }),\r\n                            })\r\n                            .then(res => res.json())\r\n                            .then(data => {\r\n                                if(data.status === 'ok'){\r\n                                    alert(data.message)\r\n                                } else{\r\n                                    alert(data.message)\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n    }\r\n    return(\r\n        <>\r\n        <h1>Hello world</h1>\r\n        </>\r\n    )\r\n} \r\n\r\n\r\nexport default Guest_verify;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,sBAAsB;AAC7B,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAIzD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACvB,IAAIC,MAAM,GAAGF,SAAS,CAAC,CAAC;EACxB,IAAIG,SAAS,GAAGD,MAAM,CAACC,SAAS;EAChC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAKC,SAAS,GAAEC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC;IAChD,IAAIC,IAAI,GAAGF,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;IAC5C,IAAIE,QAAQ,GAAGH,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;IAE5C,IAAIT,KAAK,CAACY,IAAI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;MAC3BN,SAAS,CAACO,SAAS,GAAG,qBAAqB;IAC/C,CAAC,MAAM;MACHP,SAAS,CAACO,SAAS,GAAG,EAAE;MACxB,IAAId,KAAK,CAACe,KAAK,CAAC,2BAA2B,CAAC,KAAG,IAAI,EAAE;QACjDR,SAAS,CAACO,SAAS,GAAG,yDAAyD;MACnF,CAAC,MAAK;QACF,IAAIZ,GAAG,CAACU,IAAI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;UACzBH,IAAI,CAACI,SAAS,GAAG,0BAA0B;QAC/C,CAAC,MAAM;UACH,IAAIV,WAAW,CAACQ,IAAI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;YACjCF,QAAQ,CAACG,SAAS,GAAG,gCAAgC;UACzD,CAAC,MAAM;YACCE,KAAK,CAAC,sCAAsC,EAAE;cAClDC,MAAM,EAAE,MAAM;cACdC,WAAW,EAAE,IAAI;cACjBC,OAAO,EAAE;gBACL,cAAc,EAAE,kBAAkB;gBAClCC,MAAM,EAAE,kBAAkB;gBAC1B,6BAA6B,EAAE;cACnC,CAAC;cACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;gBACjBvB,KAAK;gBACLE;cAEJ,CAAC;YACD,CAAC,CAAC,CACDsB,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;cACV,IAAGA,IAAI,CAACC,MAAM,KAAK,IAAI,EAAC;gBACpBC,KAAK,CAACF,IAAI,CAACG,OAAO,CAAC;cACvB,CAAC,MAAK;gBACFD,KAAK,CAACF,IAAI,CAACG,OAAO,CAAC;cACvB;YACJ,CAAC,CAAC;UACN;QACJ;MACJ;IACJ;EACR,CAAC;EACD,oBACIrC,KAAA,CAAAsC,aAAA,CAAAtC,KAAA,CAAAuC,QAAA,qBACAvC,KAAA,CAAAsC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,aAAe,CACjB,CAAC;AAEX,CAAC;AAGD,eAAezC,YAAY"},"metadata":{},"sourceType":"module"}